#!/bin/bash
# ABRA
# Generated by dx-app-wizard.

main() {

    dx download "$tbam" -o ${caseid}.tumor.bam
    dx download "$reference" -o ref.tar.gz

    mkdir dnaref
    docker run -v ${PWD}:/data docker.io/goalconsortium/abra2:1.0.0 tar -I pigz -xvf ref.tar.gz --strip-components=1 -C dnaref
    
    ioopt="--in ${caseid}.tumor.bam --out ${caseid}.tumor.abra2.bam"

    if [ -n "$nbam" ]
    then
        dx download "$nbam" -o ${caseid}.normal.bam
	ioopt="--in ${caseid}.normal.bam,${caseid}.tumor.bam --out ${caseid}.normal.abra2.bam,${caseid}.tumor.abra2.bam"
    fi

    opt=''
    if [ -n "$panel" ]
    then
        dx download "$panel" -o panel.tar.gz
        mkdir -p panel
        docker run -v ${PWD}:/data docker.io/goalconsortium/abra2:1.0.0 tar -I pigz -xvf panel.tar.gz
	opt="--targets targetpanel.bed"
    fi

    threads=`nproc`
    mkdir tmpdir
    
    for i in *.bam
    do 
	docker run -v ${PWD}:/data docker.io/goalconsortium/abra2:1.0.0 samtools index -@ $threads $i
    done
        
    docker run -v ${PWD}:/data docker.io/goalconsortium/abra2:1.0.0 java -Xmx16G -jar /usr/local/bin/abra2.jar $ioopt --ref dnaref/genome.fa --threads $threads $opt --tmpdir tmpdir --mbq 150 --mnf 5 --mer 0.05 > abra.log

    abratbam=$(dx upload ${caseid}.tumor.abra2.bam --brief)
    dx-jobutil-add-output abratbam "$abratbam" --class=file

    abratbai=$(dx upload ${caseid}.tumor.abra2.bam.bai --brief)
    dx-jobutil-add-output abratbai "$abratbai" --class=file
    
    if [ -n "$nbam" ]
    then
	abranbam=$(dx upload ${caseid}.normal.abra2.bam --brief)
	dx-jobutil-add-output abranbam "$abranbam" --class=file
 	abranbai=$(dx upload ${caseid}.normal.abra2.bam.bai --brief)
	dx-jobutil-add-output abranbai "$abranbai" --class=file
    fi
}
